//
//  Locale.swift
//  CaseIterable
//
//  Created by nuomi1 on 14/7/2019.
//  Copyright Â© 2019 nuomi1. All rights reserved.
//
%{
import json
import os
import re

dictionary_path = "../../Assets/Foundation/Locale/"

min_version = 10.3
max_version = 13.3

locale_available_identifiers = {}

for file in os.listdir(dictionary_path):
    if file[-5:] != ".json":
        break

    with open(dictionary_path + file, "r") as f:
        data = json.load(f)

        version_string = re.findall(r"\d+\.\d+", data["systemVersion"])[0]
        version_float = float(version_string)

        for identifier in data["identifiers"]:
            locale_available_identifiers[identifier] = locale_available_identifiers.get(
                identifier, []) + [version_float]

sorted_identifiers = sorted(
    locale_available_identifiers.items(), key=lambda item: item[0])
}%

import Foundation

// swiftlint:disable file_length

extension Locale {

    public enum Identifier {}
}

public extension Locale.Identifier {

    // swiftlint:disable identifier_name

% for identifier, versions in sorted_identifiers:
%     (prefix, suffix) = ("`", "`") if identifier in ["as", "is"] else ("", "")
%
%     introduced_version = min(versions)
%     deprecated_version = max(versions) + 0.1
%
%     if deprecated_version != max_version + 0.1:
    @available(iOS, introduced: ${introduced_version}, deprecated: ${deprecated_version})
%     else:
    @available(iOS, introduced: ${introduced_version})
%     end
    static let ${prefix}${identifier}${suffix} = Locale(identifier: "${identifier}")
%
%     if identifier != sorted_identifiers[-1][0]:

%     else:
%     end
% end

    // swiftlint:enable identifier_name
}
